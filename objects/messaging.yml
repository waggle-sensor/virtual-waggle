# TODO use volume for managing private credentials
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - image: waggle/rabbitmq:nc
        name: rabbitmq
        ports:
        - containerPort: 15672
        - containerPort: 5672
        envFrom:
          - configMapRef:
              name: waggle-node-env
        volumeMounts:
        - name: waggle-node-private
          mountPath: /etc/certs
          readOnly: true
        command: ['/bin/sh', '-c']
        args: ['rm -rf /etc/waggle; cp -r /etc/certs /etc/waggle; chown -R rabbitmq:rabbitmq /etc/waggle/; chown -R rabbitmq:rabbitmq /etc/rabbitmq/; /docker-entrypoint.sh rabbitmq-server']
      - image: waggle/stage-messages
        name: stage-message
        envFrom:
          - configMapRef:
              name: waggle-node-env
        args: ['amqp://worker:worker@rabbitmq', 'messages', '0000000000000000', 'amqp://worker:worker@rabbitmq', 'to-beehive']
        volumeMounts:
        - name: waggle-node-private
          mountPath: /etc/waggle
          readOnly: true
      volumes:
      - name: waggle-node-private
        secret:
          secretName: waggle-node-private
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - name: management
      protocol: TCP
      port: 15672
      targetPort: 15672
    - name: messaging
      protocol: TCP
      port: 5672
      targetPort: 5672
---
# TODO - maybe this is better to leave as an exec in the container via rabbitmqctl?
apiVersion: batch/v1
kind: Job
metadata:
  name: shovels
spec:
  template:
    spec:
      containers:
      - image: waggle/shovelctl
        name: shovelctl
        args: ['enable']
        envFrom:
          - configMapRef:
              name: waggle-node-env
      restartPolicy: OnFailure
