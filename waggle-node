#!/bin/bash -e

# use waggle node environment
set -a
source waggle-node.env
set +a

# use docker-compose.plugins.yml if it exists
if [ -e 'docker-compose.plugins.yml' ]; then
    compose_file_args='-f docker-compose.yml -f docker-compose.plugins.yml'
else
    compose_file_args='-f docker-compose.yml'
fi

command_up() {
    docker-compose $compose_file_args pull
    docker-compose $compose_file_args up --build -d --remove-orphans
}

cleanup_files() {
    for path in $*; do
        if [ -e "$path" ]; then
            echo "Clean up $path"
            rm $path
        fi
    done
}

command_down() {
    docker-compose $compose_file_args down --remove-orphans
    cleanup_files "docker-compose.plugins.yml" \
                  "private/cacert.pem" \
                  "private/cert.pem" \
                  "private/key.pem" \
                  "private/reverse_ssh_port"
}

command_logs() {
    docker-compose $compose_file_args logs --tail 100 -f $@
}

command_schedule() {
    python3 utils/set-node-plugins.py $@
}

command_run() {
    docker_image=$(python3 utils/build-plugin.py $@)
    command_schedule $docker_image
    command_logs $docker_image
}

command="$1"
shift

case "$command" in
    up) command_up $@ ;;
    down) command_down $@ ;;
    logs) command_logs $@ ;;
    schedule) command_schedule $@ ;;
    run) command_run $@ ;;
esac
